# serializer version: 1
# name: test_run_analytics_direct[cases]
  list([
    dict({
      'baz': 'qux',
      'created_at': datetime.datetime(2022, 2, 1, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': 'bar',
      'from_the_doc': 'Annette Bradley',
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': '9193',
    }),
    dict({
      'baz': None,
      'created_at': datetime.datetime(2022, 2, 1, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': None,
      'from_the_doc': None,
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': None,
    }),
    dict({
      'baz': 'qux',
      'created_at': datetime.datetime(2022, 2, 2, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': 'bar',
      'from_the_doc': 'Brendan Anthony',
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': '5765',
    }),
    dict({
      'baz': None,
      'created_at': datetime.datetime(2022, 2, 2, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': None,
      'from_the_doc': None,
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': None,
    }),
    dict({
      'baz': 'qux',
      'created_at': datetime.datetime(2022, 2, 3, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': 'bar',
      'from_the_doc': 'Susan Valenzuela',
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': '8625',
    }),
    dict({
      'baz': None,
      'created_at': datetime.datetime(2022, 2, 3, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': None,
      'from_the_doc': None,
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': None,
    }),
    dict({
      'baz': 'qux',
      'created_at': datetime.datetime(2022, 2, 4, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': 'bar',
      'from_the_doc': 'Michelle Wise',
      'quarter': 1,
      'statuuuuuus': 'completed',
      'sub_question_sumsumsum': '7437',
    }),
    dict({
      'baz': None,
      'created_at': datetime.datetime(2022, 2, 4, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': None,
      'from_the_doc': None,
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': None,
    }),
    dict({
      'baz': 'qux',
      'created_at': datetime.datetime(2022, 2, 5, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': 'bar',
      'from_the_doc': 'Nicholas Clarke',
      'quarter': 1,
      'statuuuuuus': 'suspended',
      'sub_question_sumsumsum': '7881',
    }),
    dict({
      'baz': None,
      'created_at': datetime.datetime(2022, 2, 5, 0, 0, tzinfo=datetime.timezone.utc),
      'foo': None,
      'from_the_doc': None,
      'quarter': 1,
      'statuuuuuus': 'running',
      'sub_question_sumsumsum': None,
    }),
  ])
# ---
# name: test_run_analytics_gql[case__meta0-False-cases]
  dict({
    'analyticsTable': dict({
      'resultData': dict({
        'records': dict({
          'edges': list([
            dict({
              'node': dict({
                'edges': list([
                  dict({
                    'node': dict({
                      'alias': 'baz',
                      'value': None,
                    }),
                  }),
                  dict({
                    'node': dict({
                      'alias': 'created_at',
                      'value': '2021-10-10 00:00:00+00:00',
                    }),
                  }),
                  dict({
                    'node': dict({
                      'alias': 'foo',
                      'value': 'bar',
                    }),
                  }),
                  dict({
                    'node': dict({
                      'alias': 'quarter',
                      'value': '4',
                    }),
                  }),
                  dict({
                    'node': dict({
                      'alias': 'statuuuuuus',
                      'value': 'running',
                    }),
                  }),
                ]),
              }),
            }),
          ]),
        }),
        'summary': dict({
          'edges': list([
          ]),
        }),
      }),
    }),
  })
# ---
# name: test_run_analytics_gql[case__meta0-True-cases]
  dict({
    'analyticsTable': dict({
      'resultData': dict({
        'records': dict({
          'edges': list([
          ]),
        }),
        'summary': dict({
          'edges': list([
          ]),
        }),
      }),
    }),
  })
# ---
